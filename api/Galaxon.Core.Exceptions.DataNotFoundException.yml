### YamlMime:ManagedReference
items:
- uid: Galaxon.Core.Exceptions.DataNotFoundException
  commentId: T:Galaxon.Core.Exceptions.DataNotFoundException
  id: DataNotFoundException
  parent: Galaxon.Core.Exceptions
  children:
  - Galaxon.Core.Exceptions.DataNotFoundException.#ctor(System.Nullable{System.String},System.Nullable{Exception})
  langs:
  - csharp
  - vb
  name: DataNotFoundException
  nameWithType: DataNotFoundException
  fullName: Galaxon.Core.Exceptions.DataNotFoundException
  type: Class
  source:
    remote:
      path: Core/Exceptions/DataNotFoundException.cs
      branch: main
      repo: git@github.com:mossy2100/Core.git
    id: DataNotFoundException
    path: ../Core/Core/Exceptions/DataNotFoundException.cs
    startLine: 9
  assemblies:
  - Galaxon.Core
  namespace: Galaxon.Core.Exceptions
  summary: "\nException for when an attempt is made to obtain data from a database, but it isn&apos;t found.\nIt&apos;s a bit more specific than DataException, and sometimes ObjectNotFoundException is not\nexactly what is meant.\n"
  example: []
  syntax:
    content: 'public class DataNotFoundException : DataException'
    content.vb: >-
      Public Class DataNotFoundException
          Inherits DataException
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Galaxon.Core.Exceptions.DataNotFoundException.#ctor(System.Nullable{System.String},System.Nullable{Exception})
  commentId: M:Galaxon.Core.Exceptions.DataNotFoundException.#ctor(System.Nullable{System.String},System.Nullable{Exception})
  id: '#ctor(System.Nullable{System.String},System.Nullable{Exception})'
  parent: Galaxon.Core.Exceptions.DataNotFoundException
  langs:
  - csharp
  - vb
  name: DataNotFoundException(Nullable<String>, Nullable<Exception>)
  nameWithType: DataNotFoundException.DataNotFoundException(Nullable<String>, Nullable<Exception>)
  fullName: Galaxon.Core.Exceptions.DataNotFoundException.DataNotFoundException(System.Nullable<System.String>, System.Nullable<Exception>)
  type: Constructor
  source:
    remote:
      path: Core/Exceptions/DataNotFoundException.cs
      branch: main
      repo: git@github.com:mossy2100/Core.git
    id: .ctor
    path: ../Core/Core/Exceptions/DataNotFoundException.cs
    startLine: 18
  assemblies:
  - Galaxon.Core
  namespace: Galaxon.Core.Exceptions
  summary: "\nInitializes a new instance of the DataNotFoundException class with an error message\n(optional), and a reference to the inner exception that is the cause of this exception\n(optional).\n"
  example: []
  syntax:
    content: public DataNotFoundException(string? message = null, Exception? innerException = null)
    parameters:
    - id: message
      type: System.Nullable{System.String}
      description: ''
    - id: innerException
      type: System.Nullable{Exception}
      description: ''
    content.vb: Public Sub New(message As String? = Nothing, innerException As Exception? = Nothing)
  overload: Galaxon.Core.Exceptions.DataNotFoundException.#ctor*
  nameWithType.vb: DataNotFoundException.DataNotFoundException(Nullable(Of String), Nullable(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Galaxon.Core.Exceptions.DataNotFoundException.DataNotFoundException(System.Nullable(Of System.String), System.Nullable(Of Exception))
  name.vb: DataNotFoundException(Nullable(Of String), Nullable(Of Exception))
references:
- uid: Galaxon.Core.Exceptions
  commentId: N:Galaxon.Core.Exceptions
  name: Galaxon.Core.Exceptions
  nameWithType: Galaxon.Core.Exceptions
  fullName: Galaxon.Core.Exceptions
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Galaxon.Core.Exceptions.DataNotFoundException.#ctor*
  commentId: Overload:Galaxon.Core.Exceptions.DataNotFoundException.#ctor
  name: DataNotFoundException
  nameWithType: DataNotFoundException.DataNotFoundException
  fullName: Galaxon.Core.Exceptions.DataNotFoundException.DataNotFoundException
- uid: System.Nullable{System.String}
  commentId: '!:System.Nullable{System.String}'
  definition: System.Nullable`1
  name: Nullable<String>
  nameWithType: Nullable<String>
  fullName: System.Nullable<System.String>
  nameWithType.vb: Nullable(Of String)
  fullName.vb: System.Nullable(Of System.String)
  name.vb: Nullable(Of String)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Exception}
  commentId: '!:System.Nullable{Exception}'
  definition: System.Nullable`1
  name: Nullable<Exception>
  nameWithType: Nullable<Exception>
  fullName: System.Nullable<Exception>
  nameWithType.vb: Nullable(Of Exception)
  fullName.vb: System.Nullable(Of Exception)
  name.vb: Nullable(Of Exception)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
