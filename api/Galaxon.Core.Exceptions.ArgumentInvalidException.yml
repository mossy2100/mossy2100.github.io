### YamlMime:ManagedReference
items:
- uid: Galaxon.Core.Exceptions.ArgumentInvalidException
  commentId: T:Galaxon.Core.Exceptions.ArgumentInvalidException
  id: ArgumentInvalidException
  parent: Galaxon.Core.Exceptions
  children:
  - Galaxon.Core.Exceptions.ArgumentInvalidException.#ctor
  - Galaxon.Core.Exceptions.ArgumentInvalidException.#ctor(System.Nullable{System.String},System.Nullable{Exception})
  - Galaxon.Core.Exceptions.ArgumentInvalidException.#ctor(System.Nullable{System.String},System.Nullable{System.String},System.Nullable{Exception})
  langs:
  - csharp
  - vb
  name: ArgumentInvalidException
  nameWithType: ArgumentInvalidException
  fullName: Galaxon.Core.Exceptions.ArgumentInvalidException
  type: Class
  source:
    remote:
      path: Core/Exceptions/ArgumentInvalidException.cs
      branch: main
      repo: git@github.com:mossy2100/Core.git
    id: ArgumentInvalidException
    path: ../Core/Core/Exceptions/ArgumentInvalidException.cs
    startLine: 21
  assemblies:
  - Galaxon.Core
  namespace: Galaxon.Core.Exceptions
  summary: "\nThis exception type is useful for an ArgumentException when the argument is invalid for a\nreason other than being null, out of range, or having an invalid format.\n\nI&apos;m using the same parameter order here as used by ArgumentNullException and\nArgumentOutOfRangeException, i.e. (paramName, message), for consistency. The base class,\nArgumentException, has the parameters in a different order, i.e. (message, paramName), which can\nbe confusing.\n\nI&apos;ve resolved not to use ArgumentException anymore but to treat it as an abstract base class.\nThis will avoid the issue with the arguments being out of order, and the lack of specificity.\n\nNormally for any ArgumentException we want to identify the argument causing the exception (which\nshould be done using nameof()), unless there are several, in which case the offending arguments\ncan be identified in the message.\n"
  example: []
  syntax:
    content: 'public class ArgumentInvalidException : ArgumentException'
    content.vb: >-
      Public Class ArgumentInvalidException
          Inherits ArgumentException
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Galaxon.Core.Exceptions.ArgumentInvalidException.#ctor
  commentId: M:Galaxon.Core.Exceptions.ArgumentInvalidException.#ctor
  id: '#ctor'
  parent: Galaxon.Core.Exceptions.ArgumentInvalidException
  langs:
  - csharp
  - vb
  name: ArgumentInvalidException()
  nameWithType: ArgumentInvalidException.ArgumentInvalidException()
  fullName: Galaxon.Core.Exceptions.ArgumentInvalidException.ArgumentInvalidException()
  type: Constructor
  source:
    remote:
      path: Core/Exceptions/ArgumentInvalidException.cs
      branch: main
      repo: git@github.com:mossy2100/Core.git
    id: .ctor
    path: ../Core/Core/Exceptions/ArgumentInvalidException.cs
    startLine: 26
  assemblies:
  - Galaxon.Core
  namespace: Galaxon.Core.Exceptions
  summary: "\nInitializes a new instance of the ArgumentInvalidException class.\n"
  example: []
  syntax:
    content: public ArgumentInvalidException()
    content.vb: Public Sub New
  overload: Galaxon.Core.Exceptions.ArgumentInvalidException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Galaxon.Core.Exceptions.ArgumentInvalidException.#ctor(System.Nullable{System.String},System.Nullable{Exception})
  commentId: M:Galaxon.Core.Exceptions.ArgumentInvalidException.#ctor(System.Nullable{System.String},System.Nullable{Exception})
  id: '#ctor(System.Nullable{System.String},System.Nullable{Exception})'
  parent: Galaxon.Core.Exceptions.ArgumentInvalidException
  langs:
  - csharp
  - vb
  name: ArgumentInvalidException(Nullable<String>, Nullable<Exception>)
  nameWithType: ArgumentInvalidException.ArgumentInvalidException(Nullable<String>, Nullable<Exception>)
  fullName: Galaxon.Core.Exceptions.ArgumentInvalidException.ArgumentInvalidException(System.Nullable<System.String>, System.Nullable<Exception>)
  type: Constructor
  source:
    remote:
      path: Core/Exceptions/ArgumentInvalidException.cs
      branch: main
      repo: git@github.com:mossy2100/Core.git
    id: .ctor
    path: ../Core/Core/Exceptions/ArgumentInvalidException.cs
    startLine: 36
  assemblies:
  - Galaxon.Core
  namespace: Galaxon.Core.Exceptions
  summary: "\nInitializes a new instance of the ArgumentInvalidException class with an error message, and\n(optionally) a reference to the inner exception that is the cause of this exception.\n"
  example: []
  syntax:
    content: public ArgumentInvalidException(string? message, Exception? innerException = null)
    parameters:
    - id: message
      type: System.Nullable{System.String}
      description: The message.
    - id: innerException
      type: System.Nullable{Exception}
      description: The inner exception.
    content.vb: Public Sub New(message As String?, innerException As Exception? = Nothing)
  overload: Galaxon.Core.Exceptions.ArgumentInvalidException.#ctor*
  nameWithType.vb: ArgumentInvalidException.ArgumentInvalidException(Nullable(Of String), Nullable(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Galaxon.Core.Exceptions.ArgumentInvalidException.ArgumentInvalidException(System.Nullable(Of System.String), System.Nullable(Of Exception))
  name.vb: ArgumentInvalidException(Nullable(Of String), Nullable(Of Exception))
- uid: Galaxon.Core.Exceptions.ArgumentInvalidException.#ctor(System.Nullable{System.String},System.Nullable{System.String},System.Nullable{Exception})
  commentId: M:Galaxon.Core.Exceptions.ArgumentInvalidException.#ctor(System.Nullable{System.String},System.Nullable{System.String},System.Nullable{Exception})
  id: '#ctor(System.Nullable{System.String},System.Nullable{System.String},System.Nullable{Exception})'
  parent: Galaxon.Core.Exceptions.ArgumentInvalidException
  langs:
  - csharp
  - vb
  name: ArgumentInvalidException(Nullable<String>, Nullable<String>, Nullable<Exception>)
  nameWithType: ArgumentInvalidException.ArgumentInvalidException(Nullable<String>, Nullable<String>, Nullable<Exception>)
  fullName: Galaxon.Core.Exceptions.ArgumentInvalidException.ArgumentInvalidException(System.Nullable<System.String>, System.Nullable<System.String>, System.Nullable<Exception>)
  type: Constructor
  source:
    remote:
      path: Core/Exceptions/ArgumentInvalidException.cs
      branch: main
      repo: git@github.com:mossy2100/Core.git
    id: .ctor
    path: ../Core/Core/Exceptions/ArgumentInvalidException.cs
    startLine: 49
  assemblies:
  - Galaxon.Core
  namespace: Galaxon.Core.Exceptions
  summary: "\nInitializes a new instance of the ArgumentInvalidException class with the parameter name, an\nerror message, and (optionally) a reference to the inner exception that is the cause of this\nexception.\n"
  example: []
  syntax:
    content: public ArgumentInvalidException(string? paramName, string? message, Exception? innerException = null)
    parameters:
    - id: paramName
      type: System.Nullable{System.String}
      description: The parameter name.
    - id: message
      type: System.Nullable{System.String}
      description: The message.
    - id: innerException
      type: System.Nullable{Exception}
      description: The inner exception.
    content.vb: Public Sub New(paramName As String?, message As String?, innerException As Exception? = Nothing)
  overload: Galaxon.Core.Exceptions.ArgumentInvalidException.#ctor*
  nameWithType.vb: ArgumentInvalidException.ArgumentInvalidException(Nullable(Of String), Nullable(Of String), Nullable(Of Exception))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Galaxon.Core.Exceptions.ArgumentInvalidException.ArgumentInvalidException(System.Nullable(Of System.String), System.Nullable(Of System.String), System.Nullable(Of Exception))
  name.vb: ArgumentInvalidException(Nullable(Of String), Nullable(Of String), Nullable(Of Exception))
references:
- uid: Galaxon.Core.Exceptions
  commentId: N:Galaxon.Core.Exceptions
  name: Galaxon.Core.Exceptions
  nameWithType: Galaxon.Core.Exceptions
  fullName: Galaxon.Core.Exceptions
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Galaxon.Core.Exceptions.ArgumentInvalidException.#ctor*
  commentId: Overload:Galaxon.Core.Exceptions.ArgumentInvalidException.#ctor
  name: ArgumentInvalidException
  nameWithType: ArgumentInvalidException.ArgumentInvalidException
  fullName: Galaxon.Core.Exceptions.ArgumentInvalidException.ArgumentInvalidException
- uid: System.Nullable{System.String}
  commentId: '!:System.Nullable{System.String}'
  definition: System.Nullable`1
  name: Nullable<String>
  nameWithType: Nullable<String>
  fullName: System.Nullable<System.String>
  nameWithType.vb: Nullable(Of String)
  fullName.vb: System.Nullable(Of System.String)
  name.vb: Nullable(Of String)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{Exception}
  commentId: '!:System.Nullable{Exception}'
  definition: System.Nullable`1
  name: Nullable<Exception>
  nameWithType: Nullable<Exception>
  fullName: System.Nullable<Exception>
  nameWithType.vb: Nullable(Of Exception)
  fullName.vb: System.Nullable(Of Exception)
  name.vb: Nullable(Of Exception)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
